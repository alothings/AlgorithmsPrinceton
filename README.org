
* Algorithms Part 1 and 2 (Coursera, Princeton)
  Topics:
*** Part 1
| data types | stakcs, queue, bag, union-find, priority queue] |
| sorting    | quicksort, mergesort, heapsort, radix sorts     |
| searching  | BST, red-black BST, hash table                  |
*** Part 2
| graphs     | BFS, DFS, Pring, Kruskai, Dijkstra              |
| strings    | KMP, regex, TST, Huffman, LZW                   |
| advanced   | B-tree, suffex array, maxflow                   |


** Union Find
Illustrating basic approach to developing and analyzing algorithms using the dynamic connectivity problem.
- Apply union-find data type to solve problems
- Define union-find (or disjoint sets) data type
- Compare the performance of different algorithms for the union-find data type
- Develop Java implementations of different algorithms for union-find
- Use parent-link representation
